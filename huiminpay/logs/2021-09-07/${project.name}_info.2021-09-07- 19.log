[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:31,734 INFO
            [main][:] - using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:31,764 INFO
            [main][WelcomeLogoApplicationListener.java:63] - 

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:31,774 INFO
            [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=huiminpay-merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay}
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:32,612 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e885eeb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:32,768 INFO
            [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140] -  [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:33,114 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:33,485 INFO
            [main][OverrideDubboConfigApplicationListener.java:68] - Dubbo Config was overridden by externalized configuration {dubbo.application.name=huiminpay-merchant-application, dubbo.application.qos-enable=false, dubbo.application.qos.port=22310, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay}
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:33,859 INFO
            [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:33,870 INFO
            [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'qiniu_common.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:33,876 INFO
            [main][NacosPropertySourceBuilder.java:87] - Loading nacos data, dataId: 'huiminpay-merchant-application.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:33,878 INFO
            [main][PropertySourceBootstrapConfiguration.java:98] - Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@371932487 {name='huiminpay-merchant-application.yaml', properties={server.servlet.context‐path=/merchant, swagger.enable=true}}, NacosPropertySource@2016482777 {name='qiniu_common.yaml', properties={yun.qiniu.secretKey=CYWVjzCklJ-vnv688SQE9K-2LkkMAiauQrKzNpQV, yun.qiniu.domain=http://qz1rki6zn.hn-bkt.clouddn.com/, yun.qiniu.bucket=huiminpay12, yun.qiniu.accessKey=OJVI_ge0bYNugw_9HnOoq2Z4vAbo2LBKQ3zp8eFe}}, NacosPropertySource@872592585 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=utf-8, spring.http.encoding.enabled=true, server.tomcat.protocol-header=x-forwarded-proto, server.use-forward-headers=true, server.servlet.context-path=/, spring.http.message.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.remote-ip-header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:33,913 INFO
            [main][SpringApplication.java:675] - No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,747 WARN
            [main][EndpointId.java:135] - Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,752 WARN
            [main][EndpointId.java:135] - Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,772 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,773 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,773 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,773 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,773 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,773 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,774 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,775 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,775 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,777 INFO
            [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,778 INFO
            [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,779 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,779 INFO
            [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,779 INFO
            [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,779 INFO
            [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,780 INFO
            [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,780 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,780 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,781 INFO
            [main][DubboConfigBindingRegistrar.java:127] - The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,781 INFO
            [main][DubboConfigBindingRegistrar.java:151] - The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,789 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:35,790 DEBUG
            [main][DubboConfigBindingRegistrar.java:96] - There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:36,163 WARN
            [main][EndpointId.java:135] - Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:36,290 INFO
            [main][ServiceAnnotationBeanPostProcessor.java:204] -  [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:36,291 INFO
            [main][ServiceAnnotationBeanPostProcessor.java:206] -  [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:36,376 WARN
            [main][ServiceAnnotationBeanPostProcessor.java:169] -  [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.huiminpay], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:36,379 INFO
            [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:36,379 INFO
            [main][ConfigurationClassPostProcessor.java:380] - Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:36,558 INFO
            [main][GenericScope.java:294] - BeanFactory id=ca4f8b99-8c19-3a80-ba18-86237fc56ded
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,079 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$502d3abb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,110 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,142 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,165 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,176 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,177 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,178 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$c26cd735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,190 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$5516df8d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,201 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,209 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,221 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$155c1947] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,233 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$927220c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,258 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$9419b53b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,269 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,273 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,977 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:37,996 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:38,069 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:38,074 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e18ab215] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:38,805 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:38,811 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:38,821 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:38,827 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:38,985 WARN
            [main][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:38,985 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,018 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,057 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,069 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$19ad7deb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,087 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,100 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$538379eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,113 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$27ff6b48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,128 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$da4c2d61] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,139 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$95631350] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,148 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,157 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,173 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$bc2e8a7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,201 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,211 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$a0b08d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,231 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,241 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,309 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,328 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,343 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$e69fb74b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,360 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,366 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,384 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,402 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,403 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,434 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,448 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,451 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,455 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:39,478 INFO
            [main][PostProcessorRegistrationDelegate.java:330] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$e885eeb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:40,314 INFO
            [main][TomcatWebServer.java:90] - Tomcat initialized with port(s): 57010 (http)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:40,348 INFO
            [main][DirectJDKLog.java:173] - Initializing ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:40,360 INFO
            [main][DirectJDKLog.java:173] - Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:40,364 INFO
            [main][DirectJDKLog.java:173] - Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:40,377 INFO
            [main][DirectJDKLog.java:173] - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_144\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\app\2823554072\product\11.2.0\dbhome_1\bin;C:\Users\2823554072\AppData\Local\Programs\Python\Python37\Scripts\;C:\Users\2823554072\AppData\Local\Programs\Python\Python37\;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Java\jdk1.8.0_144\bin;C:\Program Files\Java\jre1.8.0_144\bin;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\MySQL\MySQL Server 5.7\bin;D:\soft\developsoft\maven\apache-maven-3.5.4\bin;D:\develop\mysql-5.7.27-winx64\bin;D:\develop\nodejs\;C:\Users\2823554072\AppData\Local\Microsoft\WindowsApps;%M2_HOME%\bin;C:\Users\2823554072\AppData\Roaming\npm;.]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:40,868 INFO
            [main][DirectJDKLog.java:173] - Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:40,868 INFO
            [main][ServletWebServerApplicationContext.java:296] - Root WebApplicationContext: initialization completed in 6936 ms
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:43,781 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,242 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,316 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,538 INFO
            [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,685 INFO
            [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,697 INFO
            [main][AnnotatedInterfaceConfigBeanBuilder.java:84] - The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,841 WARN
            [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,930 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,933 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:44,984 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,005 INFO
            [main][QosProtocolWrapper.java:89] -  [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,005 WARN
            [main][SpringExtensionFactory.java:86] -  [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,008 DEBUG
            [main][SpringExtensionFactory.java:99] -  [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.10.2
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantApplicationBootstrap.main(MerchantApplicationBootstrap.java:18)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,025 WARN
            [main][SpringExtensionFactory.java:104] -  [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,083 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,108 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,109 DEBUG
            [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,134 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,140 INFO
            [main][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi] is being subscribed for service[name : huiminpay-merchant-service]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,141 INFO
            [main][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.huiminpay.merchant.api.MerchantServiceApi] can't be found when the subscribed service[name : huiminpay-merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,142 INFO
            [main][DubboServiceMetadataRepository.java:280] - The metadata of Dubbo service[name : huiminpay-merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,361 WARN
            [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,369 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,369 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,371 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.10.2/org.apache.dubbo.rpc.service.GenericService?application=huiminpay-merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015385361&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,372 DEBUG
            [main][AbstractSpringCloudRegistry.java:116] - The URL[consumer://192.168.10.2/org.apache.dubbo.rpc.service.GenericService?application=huiminpay-merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015385361&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,373 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.10.2/org.apache.dubbo.rpc.service.GenericService?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015385361&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,454 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,548 DEBUG
            [main][InternalLoggerFactory.java:43] - Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,563 DEBUG
            [main][MultithreadEventLoopGroup.java:44] - -Dio.netty.eventLoopThreads: 8
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,671 DEBUG
            [main][NioEventLoop.java:105] - -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,675 DEBUG
            [main][NioEventLoop.java:106] - -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,684 DEBUG
            [main][PlatformDependent.java:955] - Platform: Windows
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,688 DEBUG
            [main][PlatformDependent0.java:395] - -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,689 DEBUG
            [main][PlatformDependent0.java:871] - Java version: 8
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,693 DEBUG
            [main][PlatformDependent0.java:120] - sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,696 DEBUG
            [main][PlatformDependent0.java:144] - sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,698 DEBUG
            [main][PlatformDependent0.java:182] - java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,700 DEBUG
            [main][PlatformDependent0.java:243] - direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,702 DEBUG
            [main][PlatformDependent0.java:313] - java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,702 DEBUG
            [main][PlatformDependent0.java:378] - jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,703 DEBUG
            [main][PlatformDependent0.java:385] - java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,703 DEBUG
            [main][PlatformDependent.java:992] - sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,705 DEBUG
            [main][PlatformDependent.java:1086] - -Dio.netty.tmpdir: C:\Users\282355~1\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,705 DEBUG
            [main][PlatformDependent.java:1165] - -Dio.netty.bitMode: 64 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,715 DEBUG
            [main][PlatformDependent.java:157] - -Dio.netty.maxDirectMemory: 1870135296 bytes
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,715 DEBUG
            [main][PlatformDependent.java:164] - -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,720 DEBUG
            [main][CleanerJava6.java:92] - java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,720 DEBUG
            [main][PlatformDependent.java:184] - -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,726 DEBUG
            [main][PlatformDependent.java:860] - org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,847 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,888 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,981 DEBUG
            [main][ResourceLeakDetector.java:129] - -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,982 DEBUG
            [main][ResourceLeakDetector.java:130] - -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,998 DEBUG
            [main][PooledByteBufAllocator.java:126] - -Dio.netty.allocator.numHeapArenas: 8
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,998 DEBUG
            [main][PooledByteBufAllocator.java:127] - -Dio.netty.allocator.numDirectArenas: 8
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,999 DEBUG
            [main][PooledByteBufAllocator.java:129] - -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,999 DEBUG
            [main][PooledByteBufAllocator.java:134] - -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:45,999 DEBUG
            [main][PooledByteBufAllocator.java:138] - -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,000 DEBUG
            [main][PooledByteBufAllocator.java:139] - -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,000 DEBUG
            [main][PooledByteBufAllocator.java:140] - -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,000 DEBUG
            [main][PooledByteBufAllocator.java:141] - -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,001 DEBUG
            [main][PooledByteBufAllocator.java:142] - -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,001 DEBUG
            [main][PooledByteBufAllocator.java:143] - -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,001 DEBUG
            [main][PooledByteBufAllocator.java:144] - -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,003 DEBUG
            [main][PooledByteBufAllocator.java:145] - -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,014 DEBUG
            [main][InternalThreadLocalMap.java:54] - -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,014 DEBUG
            [main][InternalThreadLocalMap.java:57] - -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,081 DEBUG
            [main][DefaultChannelId.java:79] - -Dio.netty.processId: 35728 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,091 DEBUG
            [main][NetUtil.java:139] - -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,091 DEBUG
            [main][NetUtil.java:140] - -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,570 DEBUG
            [main][NetUtil.java:224] - Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,572 DEBUG
            [main][NetUtil.java:289] - Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,934 DEBUG
            [main][DefaultChannelId.java:101] - -Dio.netty.machineId: 98:29:a6:ff:fe:66:23:36 (auto-detected)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,980 DEBUG
            [main][ByteBufUtil.java:83] - -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,981 DEBUG
            [main][ByteBufUtil.java:92] - -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:46,981 DEBUG
            [main][ByteBufUtil.java:95] - -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,047 INFO
            [main][AbstractClient.java:199] -  [DUBBO] Succeed connect to server /192.168.10.2:20890 from NettyClient 192.168.10.2 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,048 INFO
            [main][AbstractClient.java:71] -  [DUBBO] Start NettyClient LAPTOP-HOI5C94K/192.168.10.2 connect to the server /192.168.10.2:20890, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,137 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,171 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,198 DEBUG
            [main][AdaptiveClassCodeGenerator.java:104] -  [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,233 INFO
            [main][AbstractRegistry.java:212] -  [DUBBO] Load registry cache file C:\Users\2823554072\.dubbo\dubbo-registry-huiminpay-merchant-application-127.0.0.1:8848.cache, data: {com.huiminpay.merchant.api.MerchantServiceApi=dubbo://192.168.10.2:20890/com.huiminpay.merchant.api.MerchantServiceApi?anyhost=true&application=huiminpay-merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.api.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.api.MerchantServiceApi&methods=registerMerchant,findMerchantById&path=com.huiminpay.merchant.api.MerchantServiceApi&pid=38700&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1631014892949, com.huiminpay.merchant.api.AppServiceApi=dubbo://192.168.10.2:20890/com.huiminpay.merchant.api.AppServiceApi?anyhost=true&application=huiminpay-merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.api.AppServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.api.AppServiceApi&methods=findAppByAppId,findAppsByMerchantId,createApp&path=com.huiminpay.merchant.api.AppServiceApi&pid=31024&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1630921179408, huiminpay-merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.10.2:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=38700&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631014895471&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,234 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.10.2/org.apache.dubbo.rpc.service.GenericService?application=huiminpay-merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015385361&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,246 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.10.2/org.apache.dubbo.rpc.service.GenericService?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015385361&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,262 INFO
            [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.10.2/org.apache.dubbo.rpc.service.GenericService?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015385361&version=1.0.0, urls: [dubbo://192.168.10.2:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=38700&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631014895471&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,270 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.10.2/org.apache.dubbo.rpc.service.GenericService?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015385361&version=1.0.0, urls: [dubbo://192.168.10.2:20890/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=38700&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631014895471&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,276 INFO
            [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=huiminpay-merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=huiminpay-merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=35728&qos.enable=false&qos.port=22310&refer=application%3Dhuiminpay-merchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dhuiminpay-merchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D35728%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.10.2%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1631015385361%26version%3D1.0.0&register.ip=192.168.10.2&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015385361&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,336 DEBUG
            [main][Recycler.java:96] - -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,336 DEBUG
            [main][Recycler.java:97] - -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,336 DEBUG
            [main][Recycler.java:98] - -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,336 DEBUG
            [main][Recycler.java:99] - -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,365 DEBUG
            [NettyClientWorker-1-1][AbstractByteBuf.java:61] - -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,366 DEBUG
            [NettyClientWorker-1-1][AbstractByteBuf.java:62] - -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,370 DEBUG
            [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202] - Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@5db0decb
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,465 DEBUG
            [DubboServerHandler-192.168.10.2:20890-thread-8][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,506 DEBUG
            [DubboClientHandler-192.168.10.2:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,508 WARN
            [main][DubboServiceMetadataRepository.java:484] - The Spring application[name : huiminpay-merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,510 DEBUG
            [DubboServerHandler-192.168.10.2:20890-thread-9][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,511 DEBUG
            [DubboClientHandler-192.168.10.2:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,513 DEBUG
            [main][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841] will notify all URLs : [dubbo://192.168.10.2:20890?anyhost=true&application=huiminpay-merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.api.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.api.MerchantServiceApi&methods=registerMerchant,findMerchantById&pid=38700&register=true&release=2.7.3&side=provider&timestamp=1631014892949]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,516 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,520 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,527 INFO
            [main][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841, urls: [dubbo://192.168.10.2:20890/com.huiminpay.merchant.api.MerchantServiceApi?anyhost=true&application=huiminpay-merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.api.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.api.MerchantServiceApi&methods=registerMerchant,findMerchantById&path=com.huiminpay.merchant.api.MerchantServiceApi&pid=38700&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1631014892949], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,528 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399] -  [DUBBO] Notify urls for subscribe url consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841, urls: [dubbo://192.168.10.2:20890/com.huiminpay.merchant.api.MerchantServiceApi?anyhost=true&application=huiminpay-merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.api.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.api.MerchantServiceApi&methods=registerMerchant,findMerchantById&path=com.huiminpay.merchant.api.MerchantServiceApi&pid=38700&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1631014892949], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,528 INFO
            [main][ReferenceConfig.java:421] -  [DUBBO] Refer dubbo service com.huiminpay.merchant.api.MerchantServiceApi from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=huiminpay-merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&refer=application%3Dhuiminpay-merchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.huiminpay.merchant.api.MerchantServiceApi%26lazy%3Dfalse%26methods%3DregisterMerchant%2CfindMerchantById%26pid%3D35728%26qos.enable%3Dfalse%26qos.port%3D22310%26register.ip%3D192.168.10.2%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1631015384841&register.ip=192.168.10.2&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:47,604 WARN
            [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:48,111 INFO
            [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : huiminpay-merchant-application , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:48,111 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.10.2:20890/com.huiminpay.merchant.api.MerchantServiceApi] is being subscribed for service[name : huiminpay-merchant-application]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:48,112 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.huiminpay.merchant.api.MerchantServiceApi] can't be found when the subscribed service[name : huiminpay-merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:48,112 DEBUG
            [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : huiminpay-merchant-application] has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:48,113 WARN
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.huiminpay.merchant.api.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:48,563 INFO
            [main][EndpointLinksResolver.java:59] - Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,259 INFO
            [main][PropertySourcedRequestMappingHandlerMapping.java:69] - Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,387 WARN
            [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,387 INFO
            [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,407 WARN
            [main][URLConfigurationSource.java:121] - No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,408 INFO
            [main][URLConfigurationSource.java:122] - To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,500 DEBUG
            [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,501 DEBUG
            [main][ResourceBundleMessageInterpolator.java:89] - Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,532 DEBUG
            [main][TraversableResolvers.java:60] - Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,534 DEBUG
            [main][ConfigurationImpl.java:148] - Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,535 DEBUG
            [main][ConfigurationImpl.java:180] - Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,537 DEBUG
            [main][ConfigurationImpl.java:194] - Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,539 DEBUG
            [main][ValidationXmlParser.java:120] - Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,539 DEBUG
            [main][ResourceLoaderHelper.java:53] - Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,540 DEBUG
            [main][ResourceLoaderHelper.java:60] - Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,541 DEBUG
            [main][ResourceLoaderHelper.java:66] - Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,542 DEBUG
            [main][ValidationXmlParser.java:127] - No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,551 DEBUG
            [main][ValidatorFactoryImpl.java:578] - HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,552 DEBUG
            [main][ValidatorFactoryImpl.java:579] - HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,552 DEBUG
            [main][ValidatorFactoryImpl.java:580] - HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,552 DEBUG
            [main][ValidatorFactoryImpl.java:581] - HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,553 DEBUG
            [main][ValidatorFactoryImpl.java:582] - HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:49,774 INFO
            [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:50,686 INFO
            [main][ExecutorConfigurationSupport.java:171] - Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:50,737 INFO
            [main][DubboConfigBindingBeanPostProcessor.java:109] - The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,655 DEBUG
            [main][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : huiminpay-merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,655 INFO
            [main][DubboServiceMetadataRepository.java:262] - The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,797 INFO
            [main][DocumentationPluginsBootstrapper.java:160] - Context refreshed
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,802 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,804 INFO
            [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : huiminpay-merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,806 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi] is being subscribed for service[name : huiminpay-merchant-service]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,810 DEBUG
            [DubboServerHandler-192.168.10.2:20890-thread-10][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,812 DEBUG
            [DubboClientHandler-192.168.10.2:20890-thread-1][DecodeHandler.java:59] -  [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,813 DEBUG
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289] - The subscribed URL[consumer://192.168.10.2/com.huiminpay.merchant.api.MerchantServiceApi?application=huiminpay-merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.api.MerchantServiceApi&lazy=false&methods=registerMerchant,findMerchantById&pid=35728&qos.enable=false&qos.port=22310&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1631015384841] will notify all URLs : [dubbo://192.168.10.2:20890?anyhost=true&application=huiminpay-merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.api.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.api.MerchantServiceApi&methods=registerMerchant,findMerchantById&pid=38700&register=true&release=2.7.3&side=provider&timestamp=1631014892949]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,832 INFO
            [main][DocumentationPluginsBootstrapper.java:163] - Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:51,921 INFO
            [main][ApiListingReferenceScanner.java:41] - Scanning for api listing references
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,251 INFO
            [main][DirectJDKLog.java:173] - Starting ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,367 INFO
            [main][TomcatWebServer.java:204] - Tomcat started on port(s): 57010 (http) with context path ''
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,720 WARN
            [main][AbstractInterfaceConfig.java:265] -  [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,784 INFO
            [main][ServiceConfig.java:643] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-application&bind.ip=192.168.10.2&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=35728&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631015392724&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,784 INFO
            [main][ServiceConfig.java:581] -  [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.10.2:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-application&bind.ip=192.168.10.2&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=35728&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631015392724&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,785 INFO
            [main][AbstractInterfaceConfig.java:237] -  [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,785 INFO
            [main][ServiceConfig.java:595] -  [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.10.2:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-application&bind.ip=192.168.10.2&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=35728&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631015392724&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=huiminpay-merchant-application&dubbo=2.0.2&pid=35728&qos.enable=false&qos.port=22310&registry=nacos&release=2.7.3&timestamp=1631015392721, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,833 INFO
            [main][AbstractServer.java:73] -  [DUBBO] Start NettyServer bind /0.0.0.0:20891, export /192.168.10.2:20891, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,837 INFO
            [main][AbstractRegistry.java:280] -  [DUBBO] Register: dubbo://192.168.10.2:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=35728&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631015392724&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,841 INFO
            [main][AbstractRegistry.java:305] -  [DUBBO] Subscribe: provider://192.168.10.2:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-application&bind.ip=192.168.10.2&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=35728&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631015392724&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,847 WARN
            [main][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.10.2:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-application&bind.ip=192.168.10.2&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=35728&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631015392724&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,848 WARN
            [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395] -  [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.10.2:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=huiminpay-merchant-application&bind.ip=192.168.10.2&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=huiminpay-merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=35728&qos.enable=false&qos.port=22310&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1631015392724&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,851 INFO
            [main][DubboMetadataServiceExporter.java:86] - The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@40ebb56" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" unexported="false" exported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" dynamic="true" group="huiminpay-merchant-application" register="true" deprecated="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,881 INFO
            [main][NacosServiceRegistry.java:62] - nacos registry, huiminpay-merchant-application 192.168.10.2:57010 register finished
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:52,887 INFO
            [main][StartupInfoLogger.java:59] - Started MerchantApplicationBootstrap in 22.754 seconds (JVM running for 26.9)
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:53,436 INFO
            [RMI TCP Connection(10)-127.0.0.1][DirectJDKLog.java:173] - Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:53,436 INFO
            [RMI TCP Connection(10)-127.0.0.1][FrameworkServlet.java:524] - Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:53,490 INFO
            [RMI TCP Connection(10)-127.0.0.1][FrameworkServlet.java:546] - Completed initialization in 53 ms
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:53,891 INFO
            [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : huiminpay-merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:53,891 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.10.2:20890/com.huiminpay.merchant.api.MerchantServiceApi] is being subscribed for service[name : huiminpay-merchant-application]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:53,892 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.huiminpay.merchant.api.MerchantServiceApi] can't be found when the subscribed service[name : huiminpay-merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:53,892 DEBUG
            [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : huiminpay-merchant-application] has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:49:53,892 WARN
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.huiminpay.merchant.api.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:50:03,131 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:50:21,812 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:50:33,150 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:50:51,822 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:50:51,823 DEBUG
            [NettyClientWorker-1-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:50:51,825 DEBUG
            [NettyServerWorker-3-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.10.2:60729, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:50:51,825 DEBUG
            [NettyClientWorker-1-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:51:03,169 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:51:21,833 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:51:33,185 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:51:51,839 DEBUG
            [NettyClientWorker-1-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:51:51,841 DEBUG
            [NettyClientWorker-1-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:51:51,841 DEBUG
            [NettyServerWorker-3-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.10.2:60729, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:51:51,844 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:52:03,197 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:52:21,850 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:52:33,215 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:52:51,852 DEBUG
            [NettyClientWorker-1-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:52:51,853 DEBUG
            [NettyClientWorker-1-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:52:51,852 DEBUG
            [NettyServerWorker-3-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.10.2:60729, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:52:51,857 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:53:03,225 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:53:21,869 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:53:33,242 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:53:51,854 DEBUG
            [NettyClientWorker-1-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:53:51,856 DEBUG
            [NettyServerWorker-3-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.10.2:60729, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:53:51,856 DEBUG
            [NettyClientWorker-1-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:53:51,889 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:54:03,256 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:54:21,893 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:54:33,263 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:54:51,860 DEBUG
            [NettyClientWorker-1-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:54:51,862 DEBUG
            [NettyServerWorker-3-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.10.2:60729, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:54:51,862 DEBUG
            [NettyClientWorker-1-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:54:51,909 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:55:03,276 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:55:21,916 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:55:33,294 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:55:51,862 DEBUG
            [NettyClientWorker-1-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:55:51,864 DEBUG
            [NettyServerWorker-3-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.10.2:60729, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:55:51,864 DEBUG
            [NettyClientWorker-1-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:55:51,926 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:56:03,309 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:56:21,935 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:56:33,321 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:56:51,873 DEBUG
            [NettyClientWorker-1-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:56:51,874 DEBUG
            [NettyServerWorker-3-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.10.2:60729, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:56:51,874 DEBUG
            [NettyClientWorker-1-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:56:51,953 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:03,329 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:21,967 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:33,352 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:51,878 DEBUG
            [NettyClientWorker-1-1][NettyClientHandler.java:121] -  [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xd5d00d8c, L:/192.168.10.2:60729 - R:/192.168.10.2:20890]], dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:51,880 DEBUG
            [NettyServerWorker-3-2][HeartbeatHandler.java:74] -  [DUBBO] Received heartbeat from remote channel /192.168.10.2:60729, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:51,880 DEBUG
            [NettyClientWorker-1-1][HeartbeatHandler.java:84] -  [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:51,975 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:58,285 WARN
            [NettyServerWorker-3-2][AbstractServer.java:213] -  [DUBBO] All clients has disconnected from /192.168.10.2:20890. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:57:58,286 DEBUG
            [DubboServerHandler-192.168.10.2:20890-thread-12][DubboProtocol.java:174] -  [DUBBO] disconnected from /192.168.10.2:60729,url:dubbo://192.168.10.2:20890/com.huiminpay.merchant.api.MerchantServiceApi?anyhost=true&application=huiminpay-merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.api.MerchantServiceApi&bind.ip=192.168.10.2&bind.port=20890&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.huiminpay.merchant.api.MerchantServiceApi&methods=registerMerchant,findMerchantById&pid=38700&qos.enable=false&qos.port=22240&register=true&release=2.7.3&side=provider&timestamp=1631014892949, dubbo version: 2.7.3, current host: 192.168.10.2
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:58:03,359 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:58:28,865 INFO
            [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157] - The event of the service instances[name : huiminpay-merchant-application , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:58:28,866 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213] - The Dubbo Service URL[ID : provider://192.168.10.2:20890/com.huiminpay.merchant.api.MerchantServiceApi] is being subscribed for service[name : huiminpay-merchant-application]
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:58:28,866 INFO
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223] - The metadata of Dubbo service[key : com.huiminpay.merchant.api.MerchantServiceApi] can't be found when the subscribed service[name : huiminpay-merchant-application], and then try to initialize it
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:58:28,866 DEBUG
            [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273] - The metadata of Dubbo service[name : huiminpay-merchant-application] has been initialized
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:58:28,866 WARN
            [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234] - The metadata of Dubbo service[key : com.huiminpay.merchant.api.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:58:33,375 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:59:03,383 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}] 2021-09-07 19:59:33,403 WARN
            [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216] - Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
